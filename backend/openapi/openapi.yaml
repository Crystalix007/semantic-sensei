openapi: "3.0.2"
info:
  title: Semantic Sensei
  version: "1.0"
servers:
  - url: http://localhost:8080/api/

paths:
  /projects:
    get:
      description: "Gets the list of projects"
      responses:
        200:
          description: "The list of projects"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Projects"

  /project:
    post:
      description: "Creates a new project"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateProject"
      responses:
        201:
          description: "The created project"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        303:
          $ref: "#/components/responses/Redirect"

  /project/{id}:
    get:
      description: "Gets the project with the given ID"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            x-go-type: int64
      responses:
        200:
          description: "The project with the given ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        404:
          description: "The project with the given ID does not exist"

  /project/{project_id}/classification_task_label:
    post:
      description: "Creates a new classification task label"
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            x-go-type: int64
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateClassificationTaskLabel"
      responses:
        201:
          description: "The created classification task label"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassificationTaskLabel"
        303:
          $ref: "#/components/responses/Redirect"

  /project/{project_id}/classification_task_label/{id}:
    get:
      description: "Gets the classification task label with the given ID"
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            x-go-type: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            x-go-type: int64
      responses:
        200:
          description: "The classification task label with the given ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassificationTaskLabel"
        404:
          description: "The classification task label with the given ID does not exist"

  /project/{project_id}/classification_task:
    post:
      description: "Creates a new classification task"
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            x-go-type: int64
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateClassificationTask"
          application/json:
            schema:
              $ref: "#/components/schemas/CreateClassificationTask"
      responses:
        201:
          description: "The created pending classification task"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PendingClassificationTask"
        303:
          $ref: "#/components/responses/Redirect"

  /project/{project_id}/classification_tasks:
    get:
      description: "Gets the classification tasks associated with a project"
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            x-go-type: int64
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PageSize"
      responses:
        200:
          description: "The classification tasks assigned to a project"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassificationTaskList"
        404:
          description: "The project doesn't exist"

  /project/{project_id}/classification_task/{id}:
    get:
      description: "Gets the classification task with the given ID"
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            x-go-type: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            x-go-type: int64
      responses:
        200:
          description: "The classification task with the given ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassificationTaskOrPendingClassificationTask"
        404:
          description: "The classification task with the given ID does not exist"

  /project/{project_id}/classification_task/{id}/label:
    post:
      description: "Labels the classification task with the given ID"
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            x-go-type: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            x-go-type: int64
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/LabelTask"
      responses:
        200:
          description: "The updated classification task"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassificationTask"
        303:
          $ref: "#/components/responses/Redirect"
        404:
          description: "The classification task with the given ID does not exist"

  /project/{project_id}/pending_classification_tasks:
    get:
      description: "Gets the pending classification tasks associated with a project"
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: integer
            x-go-type: int64
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PageSize"
      responses:
        200:
          description: "The pending classification tasks assigned to a project"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PendingClassificationTaskList"
        404:
          description: "The project doesn't exist"

  /openapi.json:
    get:
      description: Gets the OpenAPI specification
      responses:
        200:
          description: The OpenAPI specification
          content:
            application/json:
              schema:
                type: object
                x-go-type: openapi3.T
                x-go-type-import:
                  path: github.com/getkin/kin-openapi/openapi3

components:
  schemas:
    CreateProject:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
        - description

    Project:
      type: object
      properties:
        id:
          type: integer
          x-go-type: int64
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        labels:
          type: array
          items:
            $ref: "#/components/schemas/ClassificationTaskLabel"

      required:
        - id
        - name
        - description
        - created_at

    Projects:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: "#/components/schemas/Project"

    CreateClassificationTaskLabel:
      type: object
      properties:
        label:
          type: string
      required:
        - label

    ClassificationTaskLabel:
      type: object
      properties:
        id:
          type: integer
          x-go-type: int64
        project_id:
          type: integer
          x-go-type: int64
        label:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - project_id
        - label
        - created_at

    CreateClassificationTask:
      type: object
      properties:
        llm_input:
          type: string
        llm_output:
          type: string
        embedding:
          type: string
          format: binary
      required:
        - llm_input
        - llm_output
        - embedding

    ClassificationTask:
      allOf:
        - $ref: "#/components/schemas/PendingClassificationTask"
        - type: object
          properties:
            label_id:
              type: integer
              x-go-type: int64
          required:
            - label_id

    ClassificationTaskOrPendingClassificationTask:
      oneOf:
        - $ref: "#/components/schemas/PendingClassificationTask"
        - $ref: "#/components/schemas/ClassificationTask"

    ClassificationTaskList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ClassificationTask"
        total:
          type: integer
          x-go-type: uint64
      required:
        - data
        - total

    LabelTask:
      type: object
      properties:
        label:
          type: integer
          x-go-type: int64
      required:
        - label

    Location:
      type: string
      format: uri

    PendingClassificationTask:
      type: object
      properties:
        id:
          type: integer
          x-go-type: int64
        project_id:
          type: integer
          x-go-type: int64
        llm_input:
          type: string
        llm_output:
          type: string
        embedding:
          type: string
          format: byte
        created_at:
          type: string
          format: date-time
      required:
        - id
        - project_id
        - llm_input
        - llm_output
        - embedding
        - created_at

    PendingClassificationTaskList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PendingClassificationTask"
        total:
          type: integer
          x-go-type: uint64
      required:
        - data
        - total

  responses:
    Redirect:
      description: "A redirection to the frontend page with the created resource"
      headers:
        Location:
          schema:
            $ref: "#/components/schemas/Location"

  parameters:
    Page:
      name: page
      in: query
      description: The page number
      required: false
      schema:
        type: integer
        format: int64
        x-go-type: uint64
        minimum: 0

    PageSize:
      name: page_size
      in: query
      description: The number of results per page
      required: false
      schema:
        type: integer
        format: int64
        x-go-type: uint64
        minimum: 1
